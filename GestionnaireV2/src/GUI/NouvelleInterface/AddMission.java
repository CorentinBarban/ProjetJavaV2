/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.NouvelleInterface;

import API.Company;
import API.Mission;
import API.Person;
import API.Requirement;
import API.Skill;
import Management.ManageMission;
import java.text.ParseException;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;

/**
 *
 * @author corentin
 */
public class AddMission extends javax.swing.JPanel {

    /**
     * Creates new form AddMission
     */
    private Company myCompany;
    private home myFrame;
    //Liste de personnes selectionnés sur une compétence
    private LinkedHashMap<Skill, DefaultListModel<Person>> listModelPerson = new LinkedHashMap();
    //Liste de personnes disponible sur une compétence
    private LinkedHashMap<Skill, DefaultListModel<Person>> listModelPersonAvailable = new LinkedHashMap();
    //Liste du nombre de personnes max sur une comptétence
    private LinkedHashMap<Skill, Integer> nbPersonBySkill = new LinkedHashMap<>();
    //Liste de besoins de la mission en fonction des compétences
    private LinkedHashMap<Skill, Requirement> requirementBySkill = new LinkedHashMap<>();

    private int idRequirement = 1;

    public AddMission(Company myCompany, home myFrame) {
        this.myCompany = myCompany;
        this.myFrame = myFrame;
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelHeader2 = new javax.swing.JPanel();
        jLabelTitle2 = new javax.swing.JLabel();
        jLabelReturn2 = new javax.swing.JLabel();
        jPanelContainerMission = new javax.swing.JPanel();
        jPanelLeftDetail = new javax.swing.JPanel();
        jLabelNameMission = new javax.swing.JLabel();
        jLabelFireDateMission = new javax.swing.JLabel();
        jLabelDurationMission = new javax.swing.JLabel();
        jLabelNbPersonMission = new javax.swing.JLabel();
        jLabelStateMission = new javax.swing.JLabel();
        jTextFieldNameMission = new javax.swing.JTextField();
        jFormattedTextFieldFireDate = new javax.swing.JFormattedTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jSpinnerNbPersonMission = new javax.swing.JSpinner();
        jSpinnerDurationMission = new javax.swing.JSpinner();
        jSeparator2 = new javax.swing.JSeparator();
        jPanelRightDetail = new javax.swing.JPanel();
        jLabelSkill = new javax.swing.JLabel();
        jLabelPerson = new javax.swing.JLabel();
        jPanelSkill = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DefaultListModel<Skill> mySkillModel = new DefaultListModel();
        jListSkill = new javax.swing.JList<Skill>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListSkillAvailable = new javax.swing.JList<Skill>();
        jButtonShiftLeftS = new javax.swing.JButton();
        jButtonShiftRightS = new javax.swing.JButton();
        jPanelPerson = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        DefaultListModel<Person> personModel = new DefaultListModel();
        jListPerson = new javax.swing.JList<Person>();
        jScrollPane4 = new javax.swing.JScrollPane();
        DefaultListModel<Person> personModelAV = new DefaultListModel();
        jListPersonAvailable = new javax.swing.JList<Person>();
        jButtonShiftLeftP = new javax.swing.JButton();
        jButtonShiftRightP = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSpinnerNbPerson = new javax.swing.JSpinner();
        jButtonSubmit = new javax.swing.JButton();

        setBackground(new java.awt.Color(246, 246, 246));

        jPanelHeader2.setBackground(new java.awt.Color(255, 255, 255));

        jLabelTitle2.setFont(new java.awt.Font("Roboto", 0, 40));
        jLabelTitle2.setForeground(new java.awt.Color(48, 51, 58));
        jLabelTitle2.setText("Ajouter une mission");

        jLabelReturn2.setFont(new java.awt.Font("Roboto", 0, 20));
        jLabelReturn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Images/ic_arrow_back_black_48dp.png"))); // NOI18N
        jLabelReturn2.setText("Retour");
        jLabelReturn2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabelReturn2MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanelHeader2Layout = new javax.swing.GroupLayout(jPanelHeader2);
        jPanelHeader2.setLayout(jPanelHeader2Layout);
        jPanelHeader2Layout.setHorizontalGroup(
            jPanelHeader2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeader2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelReturn2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelTitle2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(157, 157, 157))
        );
        jPanelHeader2Layout.setVerticalGroup(
            jPanelHeader2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeader2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelHeader2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelReturn2)
                    .addComponent(jLabelTitle2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanelContainerMission.setBackground(new java.awt.Color(255, 255, 255));
        jPanelContainerMission.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanelLeftDetail.setBackground(new java.awt.Color(255, 255, 255));
        jPanelLeftDetail.setPreferredSize(new java.awt.Dimension(280, 424));

        jLabelNameMission.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelNameMission.setText("Nom de la mission :");

        jLabelFireDateMission.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelFireDateMission.setText("<html>\n<p>Date de début :</p>\n<p> ( dd/MM/YYYY ) </p>\n</html>");

        jLabelDurationMission.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelDurationMission.setText("Durée (en semaines) :");

        jLabelNbPersonMission.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelNbPersonMission.setText("<html>\n\n<p>Nombre de personnes :</p>\n<p> sur la mission</p>\n\n</html>");

        jLabelStateMission.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelStateMission.setText("Etat de la mission :");

        try {
            jFormattedTextFieldFireDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldFireDate.setToolTipText("dd/MM/AAAA");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "En préparation", "En cours", "Planifiée" }));
        jComboBox1.setEnabled(false);

        jSpinnerNbPersonMission.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jSpinnerDurationMission.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

        javax.swing.GroupLayout jPanelLeftDetailLayout = new javax.swing.GroupLayout(jPanelLeftDetail);
        jPanelLeftDetail.setLayout(jPanelLeftDetailLayout);
        jPanelLeftDetailLayout.setHorizontalGroup(
            jPanelLeftDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLeftDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLeftDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNbPersonMission, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelStateMission)
                    .addComponent(jLabelDurationMission)
                    .addComponent(jLabelFireDateMission, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNameMission))
                .addGap(10, 10, 10)
                .addGroup(jPanelLeftDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldNameMission)
                    .addComponent(jFormattedTextFieldFireDate)
                    .addComponent(jComboBox1, 0, 128, Short.MAX_VALUE)
                    .addGroup(jPanelLeftDetailLayout.createSequentialGroup()
                        .addGroup(jPanelLeftDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSpinnerNbPersonMission, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                            .addComponent(jSpinnerDurationMission))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelLeftDetailLayout.setVerticalGroup(
            jPanelLeftDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLeftDetailLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanelLeftDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNameMission)
                    .addComponent(jTextFieldNameMission, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanelLeftDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFireDateMission, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldFireDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanelLeftDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDurationMission)
                    .addComponent(jSpinnerDurationMission, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanelLeftDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNbPersonMission, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerNbPersonMission, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanelLeftDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelStateMission)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jFormattedTextFieldFireDate.getAccessibleContext().setAccessibleParent(jLabelFireDateMission);

        jSeparator2.setBackground(new java.awt.Color(51, 51, 51));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jPanelRightDetail.setBackground(new java.awt.Color(255, 255, 255));
        jPanelRightDetail.setPreferredSize(new java.awt.Dimension(280, 280));

        jLabelSkill.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelSkill.setText("Besoins :");

        jLabelPerson.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelPerson.setText("Personnes :");

        jPanelSkill.setBackground(java.awt.Color.white);

        jListSkill.setModel(mySkillModel);
        jListSkill.setCellRenderer(new SkillRenderer());
        jListSkill.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListSkill.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jListSkill.setSelectedIndex(1);
        jListSkill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jListSkillMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jListSkill);

        DefaultListModel<Skill> skillModelAV = new DefaultListModel();
        jListSkillAvailable.setModel(skillModelAV);
        jListSkillAvailable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListSkillAvailable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jListSkillAvailable.setSelectedIndex(1);
        jListSkillAvailable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jListSkillAvailableMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jListSkillAvailable);
        jListSkillAvailable.setCellRenderer(new SkillRenderer());

        Set entrySetSAvailble = myCompany.listeSkill.entrySet();
        Iterator it2 = entrySetSAvailble.iterator();
        while (it2.hasNext()) {
            Map.Entry me2 = (Map.Entry)it2.next();
            skillModelAV.addElement(myCompany.listeSkill.get(me2.getKey()));

        }

        jButtonShiftLeftS.setText("<<");
        jButtonShiftLeftS.setEnabled(false);
        jButtonShiftLeftS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShiftLeftSActionPerformed(evt);
            }
        });

        jButtonShiftRightS.setText(">>");
        jButtonShiftRightS.setEnabled(false);
        jButtonShiftRightS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShiftRightSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSkillLayout = new javax.swing.GroupLayout(jPanelSkill);
        jPanelSkill.setLayout(jPanelSkillLayout);
        jPanelSkillLayout.setHorizontalGroup(
            jPanelSkillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSkillLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelSkillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonShiftLeftS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonShiftRightS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelSkillLayout.setVerticalGroup(
            jPanelSkillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSkillLayout.createSequentialGroup()
                .addGroup(jPanelSkillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelSkillLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelSkillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelSkillLayout.createSequentialGroup()
                        .addContainerGap(32, Short.MAX_VALUE)
                        .addComponent(jButtonShiftLeftS)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonShiftRightS)
                        .addGap(0, 26, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanelPerson.setBackground(java.awt.Color.white);

        jListPerson.setModel(personModel);
        jListPerson.setCellRenderer(new PersonRenderer());
        jListPerson.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListPerson.setSelectedIndex(1);
        jListPerson.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jListPersonMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jListPerson);

        jListPersonAvailable.setModel(personModelAV);
        jListPersonAvailable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jListPersonAvailable.setSelectedIndex(1);
        jListPersonAvailable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jListPersonAvailableMouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(jListPersonAvailable);
        jListPersonAvailable.setCellRenderer(new PersonRenderer());

        jButtonShiftLeftP.setText("<<");
        jButtonShiftLeftP.setEnabled(false);
        jButtonShiftLeftP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShiftLeftPActionPerformed(evt);
            }
        });

        jButtonShiftRightP.setText(">>");
        jButtonShiftRightP.setEnabled(false);
        jButtonShiftRightP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShiftRightPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPersonLayout = new javax.swing.GroupLayout(jPanelPerson);
        jPanelPerson.setLayout(jPanelPersonLayout);
        jPanelPersonLayout.setHorizontalGroup(
            jPanelPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPersonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonShiftLeftP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonShiftRightP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelPersonLayout.setVerticalGroup(
            jPanelPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPersonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanelPersonLayout.createSequentialGroup()
                        .addComponent(jButtonShiftLeftP)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonShiftRightP)))
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Nombre de personnes requises : ");

        jSpinnerNbPerson.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinnerNbPerson.setEnabled(false);
        jSpinnerNbPerson.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerNbPersonStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanelRightDetailLayout = new javax.swing.GroupLayout(jPanelRightDetail);
        jPanelRightDetail.setLayout(jPanelRightDetailLayout);
        jPanelRightDetailLayout.setHorizontalGroup(
            jPanelRightDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRightDetailLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabelSkill)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanelRightDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRightDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelSkill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelPerson, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelRightDetailLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanelRightDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelRightDetailLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerNbPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabelPerson))
                        .addContainerGap(90, Short.MAX_VALUE))))
        );
        jPanelRightDetailLayout.setVerticalGroup(
            jPanelRightDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRightDetailLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabelSkill)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelSkill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelRightDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jSpinnerNbPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelPerson)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelPerson, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelContainerMissionLayout = new javax.swing.GroupLayout(jPanelContainerMission);
        jPanelContainerMission.setLayout(jPanelContainerMissionLayout);
        jPanelContainerMissionLayout.setHorizontalGroup(
            jPanelContainerMissionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContainerMissionLayout.createSequentialGroup()
                .addComponent(jPanelLeftDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelRightDetail, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelContainerMissionLayout.setVerticalGroup(
            jPanelContainerMissionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelLeftDetail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
            .addComponent(jPanelRightDetail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
            .addGroup(jPanelContainerMissionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2)
                .addGap(13, 13, 13))
        );

        jButtonSubmit.setText("Valider");
        jButtonSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelHeader2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonSubmit))
                    .addComponent(jPanelContainerMission, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelHeader2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jPanelContainerMission, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addComponent(jButtonSubmit)
                .addGap(13, 13, 13))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelReturn2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelReturn2MouseReleased
        myFrame.jPanelContainer.removeAll();
        myFrame.jPanelContainer.add(new MissionList(myCompany, myFrame));
        myFrame.repaint();
        myFrame.revalidate();
    }//GEN-LAST:event_jLabelReturn2MouseReleased

    private void jButtonShiftLeftSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShiftLeftSActionPerformed
        DefaultListModel<Skill> modelMySkill = (DefaultListModel<Skill>) jListSkill.getModel();
        DefaultListModel<Skill> modelAvailableSkill = (DefaultListModel<Skill>) jListSkillAvailable.getModel();
        //Ajout dans la liste de gauche
        modelMySkill.addElement(jListSkillAvailable.getSelectedValue());
        //Ajout du model de la liste des models
        System.out.println(jListSkillAvailable.getSelectedIndex());
        Skill skillSelected = modelAvailableSkill.getElementAt(jListSkillAvailable.getSelectedIndex());
        System.out.println(jListSkillAvailable.getSelectedIndex());

        //Creation du besoin avec la competence associée
        requirementBySkill.put(skillSelected, new Requirement(idRequirement, 0, skillSelected));
        idRequirement++;

        //Ajout du model de personne sur la compétence ajoutée
        listModelPerson.put(skillSelected, new DefaultListModel<>());
        //Suppression dans la liste de droite
        modelAvailableSkill.remove(jListSkillAvailable.getSelectedIndex());
        jButtonShiftLeftS.setEnabled(false);
    }//GEN-LAST:event_jButtonShiftLeftSActionPerformed

    private void jButtonShiftRightSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShiftRightSActionPerformed
        DefaultListModel<Skill> modelMySkill = (DefaultListModel<Skill>) jListSkill.getModel();
        DefaultListModel<Skill> modelAvailableSkill = (DefaultListModel<Skill>) jListSkillAvailable.getModel();
        //Ajout dans la liste de droite
        modelAvailableSkill.addElement(jListSkill.getSelectedValue());
        requirementBySkill.remove(jListSkill.getSelectedValue());

        //Suppression dans la lite de gauche
        modelMySkill.remove(jListSkill.getSelectedIndex());
        //Suppression de la personne au model
        listModelPerson.remove(jListSkill.getSelectedIndex());

        jButtonShiftRightS.setEnabled(false);

    }//GEN-LAST:event_jButtonShiftRightSActionPerformed

    private void jButtonShiftLeftPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShiftLeftPActionPerformed
        DefaultListModel<Person> modelMyPerson = (DefaultListModel<Person>) jListPerson.getModel();
        DefaultListModel<Person> modelAvailablePerson = (DefaultListModel<Person>) jListPersonAvailable.getModel();
        DefaultListModel<Skill> modelMySkill = (DefaultListModel<Skill>) jListSkill.getModel();

        //Ajout de la personne dans le model 
        modelMyPerson.addElement(jListPersonAvailable.getSelectedValue());

        //Recuperation de la competence selectionée
        Skill skillSelected = modelMySkill.getElementAt(jListSkill.getSelectedIndex());
        //Recupereation du besoin selectioné
        Requirement r = requirementBySkill.get(skillSelected);
        //Ajout de la personne sur le besoin
        try {
            r.addPerson(modelAvailablePerson.getElementAt(jListPersonAvailable.getSelectedIndex()));
        } catch (Exception ex) {
            Logger.getLogger(AddMission.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Suppression de le l'element dans la liste des personnes disponibles
        listModelPersonAvailable.get(skillSelected).remove(jListPersonAvailable.getSelectedIndex());
        jButtonShiftLeftP.setEnabled(false);
    }//GEN-LAST:event_jButtonShiftLeftPActionPerformed

    private void jButtonShiftRightPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShiftRightPActionPerformed
        DefaultListModel<Person> modelMyPerson = (DefaultListModel<Person>) jListPerson.getModel();
        DefaultListModel<Person> modelAvailablePerson = (DefaultListModel<Person>) jListPersonAvailable.getModel();
        DefaultListModel<Skill> modelMySkill = (DefaultListModel<Skill>) jListSkill.getModel();

        //Recuperation de la competence selectionée
        Skill skillSelected = modelMySkill.getElementAt(jListSkill.getSelectedIndex());
        //Recupereation du besoin selectioné
        Requirement r = requirementBySkill.get(skillSelected);
        //Suppression de la personne sur le besoin
        Person p = modelMyPerson.getElementAt(jListPerson.getSelectedIndex());
        r.getListPersonnes().remove(r.getIndexPerson(p));

        // Ajout de la personne à la liste de personne disponible
        modelAvailablePerson.addElement(jListPerson.getSelectedValue());
        //Suppression de la personne au model
        modelMyPerson.remove(jListPerson.getSelectedIndex());


    }//GEN-LAST:event_jButtonShiftRightPActionPerformed


    private void jListSkillMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListSkillMouseReleased
        //Recuperation de la personne selectionnée
        JList<Skill> theListSkill = (JList) evt.getSource();
        int index = theListSkill.locationToIndex(evt.getPoint());
        Skill skillSelected = theListSkill.getModel().getElementAt(index);
        //Recuperation de la liste des personnes sur la competence séléctionnée
        DefaultListModel<Person> mymodel = listModelPerson.get(skillSelected);

        Requirement r = requirementBySkill.get(skillSelected);
        jSpinnerNbPerson.setValue(r.getNbTotalPersonnes());
        jSpinnerNbPerson.setEnabled(true);
        jButtonShiftRightS.setEnabled(true);
        jListPerson.setModel(mymodel);

        //Gestion de liste des personnes sur la liste de personnes disponible
        //Creation du model
        DefaultListModel<Person> modelPersonAvailable = new DefaultListModel();
        //Ajout des personnes possedant la skill au model
        for (Map.Entry<String, Person> entrySet : myCompany.listePerson.entrySet()) {
            Person p = entrySet.getValue();
            for (Map.Entry<String, Skill> entrySet1 : p.getSkillList().entrySet()) {
                Skill s = entrySet1.getValue();
                if (s.equals(skillSelected) && !mymodel.contains(p)) {
                    modelPersonAvailable.addElement(p);
                }
            }
        }

        jListPersonAvailable.setModel(modelPersonAvailable);
        jButtonShiftLeftS.setEnabled(false);
        //Liaison entre le model et la compétence selectionnée
        listModelPersonAvailable.put(skillSelected, modelPersonAvailable);

    }//GEN-LAST:event_jListSkillMouseReleased

    private void jListSkillAvailableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListSkillAvailableMouseReleased
        jButtonShiftLeftS.setEnabled(true);
    }//GEN-LAST:event_jListSkillAvailableMouseReleased

    private void jListPersonAvailableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListPersonAvailableMouseReleased
        DefaultListModel<Person> modelMyPerson = (DefaultListModel<Person>) jListPerson.getModel();

        if ((Integer) jSpinnerNbPerson.getValue() == 0) {
            jButtonShiftLeftP.setEnabled(false);
        } else if (modelMyPerson.getSize() < (Integer) jSpinnerNbPerson.getValue()) {
            jButtonShiftLeftP.setEnabled(true);
        }

    }//GEN-LAST:event_jListPersonAvailableMouseReleased

    private void jListPersonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListPersonMouseReleased
        jButtonShiftLeftP.setEnabled(false);
        jButtonShiftRightP.setEnabled(true);
    }//GEN-LAST:event_jListPersonMouseReleased

    private void jSpinnerNbPersonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerNbPersonStateChanged

        Skill skillSelected = jListSkill.getSelectedValue();
        Requirement r = requirementBySkill.get(skillSelected);
        r.setNbTotalPerson((Integer) jSpinnerNbPerson.getValue());

        if ((Integer) jSpinnerNbPerson.getValue() > 0) {
            jButtonShiftLeftP.setEnabled(true);
        } else {
            jButtonShiftLeftP.setEnabled(false);
        }
    }//GEN-LAST:event_jSpinnerNbPersonStateChanged

    private void jButtonSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmitActionPerformed
        String name = jTextFieldNameMission.getText();
        String startDate = jFormattedTextFieldFireDate.getText();
        int duration = (Integer) jSpinnerDurationMission.getValue();
        int nbPerson = (Integer) jSpinnerNbPersonMission.getValue();
        Mission.Etat state = Mission.Etat.enPreparation;
        Mission m = null;
        //Creation de la mission
        if (name != "" && startDate != "" && "" + duration != "" && "" + nbPerson != "") {
            try {
                m = new Mission(name, startDate, duration, state);
            } catch (ParseException ex) {
                Logger.getLogger(AddMission.class.getName()).log(Level.SEVERE, null, ex);
            }

            for (Map.Entry<Skill, Requirement> entrySet : requirementBySkill.entrySet()) {
                Requirement r = entrySet.getValue();
                m.addRequirement(r);
            }
            myCompany.addMission(m);
            //Sauvegarde des données dans le fichier liste_mission.ares
            Management.ManageMission mm = new ManageMission();
            mm.writeData(myCompany);
            mm.readData(myCompany);
            // En renvoi vers le details de la mission
            myFrame.jPanelContainer.removeAll();
            myFrame.jPanelContainer.add(new MissionDetail(m, myCompany, myFrame));
            myFrame.repaint();
            myFrame.revalidate();
        }

    }//GEN-LAST:event_jButtonSubmitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonShiftLeftP;
    private javax.swing.JButton jButtonShiftLeftS;
    private javax.swing.JButton jButtonShiftRightP;
    private javax.swing.JButton jButtonShiftRightS;
    private javax.swing.JButton jButtonSubmit;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JFormattedTextField jFormattedTextFieldFireDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelDurationMission;
    private javax.swing.JLabel jLabelFireDateMission;
    private javax.swing.JLabel jLabelNameMission;
    private javax.swing.JLabel jLabelNbPersonMission;
    private javax.swing.JLabel jLabelPerson;
    public javax.swing.JLabel jLabelReturn2;
    private javax.swing.JLabel jLabelSkill;
    private javax.swing.JLabel jLabelStateMission;
    public javax.swing.JLabel jLabelTitle2;
    private javax.swing.JList<Person> jListPerson;
    private javax.swing.JList<Person> jListPersonAvailable;
    private javax.swing.JList<Skill> jListSkill;
    private javax.swing.JList<Skill> jListSkillAvailable;
    private javax.swing.JPanel jPanelContainerMission;
    private javax.swing.JPanel jPanelHeader2;
    private javax.swing.JPanel jPanelLeftDetail;
    private javax.swing.JPanel jPanelPerson;
    private javax.swing.JPanel jPanelRightDetail;
    private javax.swing.JPanel jPanelSkill;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSpinner jSpinnerDurationMission;
    private javax.swing.JSpinner jSpinnerNbPerson;
    private javax.swing.JSpinner jSpinnerNbPersonMission;
    private javax.swing.JTextField jTextFieldNameMission;
    // End of variables declaration//GEN-END:variables
}
