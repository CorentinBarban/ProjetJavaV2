/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.NouvelleInterface;

import API.Company;
import API.Mission;
import API.Person;
import API.Requirement;
import API.Skill;
import Management.ManagePerson;
import static java.lang.Integer.parseInt;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author corentin
 */
public class EditPerson extends javax.swing.JPanel {

    /**
     * Creates new form EditPerson
     */
    private Company myCompany;
    private home myFrame;
    private Person person;

    public EditPerson(Person person, Company myCompany, home myFrame) {
        this.myCompany = myCompany;
        this.myFrame = myFrame;
        this.person = person;
        initComponents();
        initInformation(person);
        jLabelErr.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelHeader = new javax.swing.JPanel();
        jLabelTitle = new javax.swing.JLabel();
        jLabelReturn = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanelLeftDetail = new javax.swing.JPanel();
        jLabelLastName = new javax.swing.JLabel();
        jLabelHireDate = new javax.swing.JLabel();
        jLabelFirstName = new javax.swing.JLabel();
        jTextFieldLastName = new javax.swing.JTextField();
        jTextFieldFirstName = new javax.swing.JTextField();
        jFormattedTextFieldHireDate = new javax.swing.JFormattedTextField();
        jPanelRightDetail = new javax.swing.JPanel();
        jLabelPerson = new javax.swing.JLabel();
        jPanelPerson = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        DefaultListModel<Skill> mySkillModel = new DefaultListModel<Skill>();
        jListSkill = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        DefaultListModel<Skill> skillModel = new DefaultListModel<Skill>();
        jListSkillAvailable = new javax.swing.JList<>();
        jButtonShiftLeftS = new javax.swing.JButton();
        jButtonShiftRightS = new javax.swing.JButton();
        jButtonSubmit = new javax.swing.JButton();
        jLabelErr = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(246, 246, 246));

        jPanelHeader.setBackground(new java.awt.Color(255, 255, 255));
        jPanelHeader.setPreferredSize(new java.awt.Dimension(808, 583));

        jLabelTitle.setFont(new java.awt.Font("Roboto", 0, 40));
        jLabelTitle.setForeground(new java.awt.Color(48, 51, 58));
        jLabelTitle.setText("Modifier une personne");

        jLabelReturn.setFont(new java.awt.Font("Roboto", 0, 20));
        jLabelReturn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Images/ic_arrow_back_black_48dp.png"))); // NOI18N
        jLabelReturn.setText("Retour");
        jLabelReturn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabelReturnMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanelHeaderLayout = new javax.swing.GroupLayout(jPanelHeader);
        jPanelHeader.setLayout(jPanelHeaderLayout);
        jPanelHeaderLayout.setHorizontalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 171, Short.MAX_VALUE)
                .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                .addGap(157, 157, 157))
        );
        jPanelHeaderLayout.setVerticalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelReturn)
                    .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanelLeftDetail.setBackground(new java.awt.Color(255, 255, 255));
        jPanelLeftDetail.setPreferredSize(new java.awt.Dimension(280, 424));

        jLabelLastName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelLastName.setText("Nom :");

        jLabelHireDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelHireDate.setText("Date d'embauche :");

        jLabelFirstName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelFirstName.setText("Prénom :");

        try {
            jFormattedTextFieldHireDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanelLeftDetailLayout = new javax.swing.GroupLayout(jPanelLeftDetail);
        jPanelLeftDetail.setLayout(jPanelLeftDetailLayout);
        jPanelLeftDetailLayout.setHorizontalGroup(
            jPanelLeftDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLeftDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLeftDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelFirstName)
                    .addComponent(jLabelLastName)
                    .addComponent(jLabelHireDate))
                .addGap(31, 31, 31)
                .addGroup(jPanelLeftDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldLastName)
                    .addComponent(jTextFieldFirstName)
                    .addComponent(jFormattedTextFieldHireDate, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelLeftDetailLayout.setVerticalGroup(
            jPanelLeftDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLeftDetailLayout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addGroup(jPanelLeftDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLastName)
                    .addComponent(jTextFieldLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanelLeftDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFirstName)
                    .addComponent(jTextFieldFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanelLeftDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelHireDate)
                    .addComponent(jFormattedTextFieldHireDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanelRightDetail.setBackground(new java.awt.Color(255, 255, 255));
        jPanelRightDetail.setPreferredSize(new java.awt.Dimension(280, 280));

        jLabelPerson.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelPerson.setText("Compétences :");

        jPanelPerson.setBackground(java.awt.Color.white);

        jListSkill.setModel(mySkillModel);
        jListSkill.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListSkill.setSelectedIndex(1);
        jListSkill.setCellRenderer(new SkillRenderer());
        jListSkill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jListSkillMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jListSkill);

        jListSkillAvailable.setModel(skillModel);
        jListSkillAvailable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jListSkillAvailable.setSelectedIndex(1);
        jListSkillAvailable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jListSkillAvailableMouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(jListSkillAvailable);
        jListSkillAvailable.setCellRenderer(new SkillRenderer());
        Set entrySetSAvailble = myCompany.listeSkill.entrySet();
        Iterator it2 = entrySetSAvailble.iterator();
        while (it2.hasNext()) {
            Map.Entry me2 = (Map.Entry)it2.next();
            skillModel.addElement(myCompany.listeSkill.get(me2.getKey()));

        }

        jButtonShiftLeftS.setText("<<");
        jButtonShiftLeftS.setEnabled(false);
        jButtonShiftLeftS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShiftLeftSActionPerformed(evt);
            }
        });

        jButtonShiftRightS.setText(">>");
        jButtonShiftRightS.setEnabled(false);
        jButtonShiftRightS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShiftRightSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPersonLayout = new javax.swing.GroupLayout(jPanelPerson);
        jPanelPerson.setLayout(jPanelPersonLayout);
        jPanelPersonLayout.setHorizontalGroup(
            jPanelPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPersonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonShiftLeftS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonShiftRightS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelPersonLayout.setVerticalGroup(
            jPanelPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPersonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPersonLayout.createSequentialGroup()
                        .addGroup(jPanelPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                            .addComponent(jScrollPane3))
                        .addGap(52, 52, 52))
                    .addGroup(jPanelPersonLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonShiftLeftS)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonShiftRightS)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jButtonSubmit.setText("Valider");
        jButtonSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmitActionPerformed(evt);
            }
        });

        jLabelErr.setForeground(new java.awt.Color(255, 51, 0));
        jLabelErr.setText("Test");

        javax.swing.GroupLayout jPanelRightDetailLayout = new javax.swing.GroupLayout(jPanelRightDetail);
        jPanelRightDetail.setLayout(jPanelRightDetailLayout);
        jPanelRightDetailLayout.setHorizontalGroup(
            jPanelRightDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRightDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRightDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelPerson, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelRightDetailLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabelPerson)
                        .addContainerGap(264, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRightDetailLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabelErr)
                .addGap(47, 47, 47)
                .addComponent(jButtonSubmit)
                .addContainerGap())
        );
        jPanelRightDetailLayout.setVerticalGroup(
            jPanelRightDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRightDetailLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabelPerson)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelPerson, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRightDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSubmit)
                    .addComponent(jLabelErr)))
        );

        jSeparator2.setBackground(new java.awt.Color(51, 51, 51));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelLeftDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelRightDetail, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator2)
                        .addGap(36, 36, 36))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelRightDetail, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                            .addComponent(jPanelLeftDetail, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 748, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelReturnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelReturnMouseReleased
        myFrame.jPanelContainer.removeAll();
        myFrame.jPanelContainer.add(new PersonDetail(person,myCompany, myFrame));
        myFrame.repaint();
        myFrame.revalidate();
    }//GEN-LAST:event_jLabelReturnMouseReleased

    private void jListSkillMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListSkillMouseReleased
        Skill skillSelected = jListSkill.getSelectedValue();
        jButtonShiftRightS.setEnabled(true);
        for (Map.Entry<Integer, Mission> entrySetM : myCompany.listeMission.entrySet()) { //Pour chaque mission
            Integer key = entrySetM.getKey();
            Mission m = entrySetM.getValue();

            HashMap<Integer, Requirement> listRequirement = m.getRequirements();

            if (m.getPersonOnMission().containsValue(person)) { // SI la personne participe à la mission
                for (Map.Entry<Integer, Requirement> entrySetR : listRequirement.entrySet()) {
                    Integer keyR = entrySetR.getKey();
                    Requirement r = entrySetR.getValue();
                    
                    if (r.getListPersonnes().contains(person) && skillSelected.equals(r.getRequiredSkill())) { // Si la personne est dans les requirements et que la compétence sélectionnée se situe dans le req
                        jButtonShiftRightS.setEnabled(false);
                        jLabelErr.setText("La compétence est attribuée sur la mission "+ m.getMissionName());
                        break;
                    }else{
                        jButtonShiftRightS.setEnabled(true);
                        jLabelErr.setText("");
                    }
                }
            }
            
        }
    }//GEN-LAST:event_jListSkillMouseReleased

    private void jListSkillAvailableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListSkillAvailableMouseReleased
        jButtonShiftLeftS.setEnabled(true);
    }//GEN-LAST:event_jListSkillAvailableMouseReleased

    private void jButtonShiftLeftSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShiftLeftSActionPerformed
        DefaultListModel<Skill> skillAvailable = (DefaultListModel<Skill>) jListSkillAvailable.getModel();
        DefaultListModel<Skill> mySkills = (DefaultListModel<Skill>) jListSkill.getModel();
        Skill skillSelected = jListSkillAvailable.getSelectedValue();
        mySkills.addElement(skillSelected);
        skillAvailable.remove(jListSkillAvailable.getSelectedIndex());
        jButtonShiftLeftS.setEnabled(false);
    }//GEN-LAST:event_jButtonShiftLeftSActionPerformed

    private void jButtonShiftRightSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShiftRightSActionPerformed

        DefaultListModel<Skill> skillAvailable = (DefaultListModel<Skill>) jListSkillAvailable.getModel();
        DefaultListModel<Skill> mySkills = (DefaultListModel<Skill>) jListSkill.getModel();
        Skill skillSelected = jListSkill.getSelectedValue();
        skillAvailable.addElement(skillSelected);
        mySkills.remove(jListSkill.getSelectedIndex());
        jButtonShiftRightS.setEnabled(false);
       
    }//GEN-LAST:event_jButtonShiftRightSActionPerformed

    private void jButtonSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmitActionPerformed
    
        DefaultListModel<Skill> modelSkill = (DefaultListModel<Skill>) jListSkill.getModel();
        
        String firstName = jTextFieldFirstName.getText();
        String lastName = jTextFieldLastName.getText();
        String hireDate = jFormattedTextFieldHireDate.getText();
        
        if (!firstName.isEmpty() && !lastName.isEmpty() && !hireDate.isEmpty()) {
            
            person.setFirstName(firstName);
            person.setLastName(lastName);
            try {
                person.setDateOfHire(hireDate);
            } catch (ParseException ex) {
                Logger.getLogger(EditPerson.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (!modelSkill.isEmpty()) {
                for (int i = 0; i < modelSkill.getSize(); i++) {
                    if(!person.getSkillList().containsValue(modelSkill.elementAt(i))){
                        person.addSkill(modelSkill.elementAt(i));
                    }
                }
            }
            Management.ManagePerson mp = new ManagePerson();
            mp.writeData(myCompany);
            mp.readData(myCompany);

            myFrame.jPanelContainer.removeAll();
            myFrame.jPanelContainer.add(new PersonDetail(person, myCompany, myFrame));
            myFrame.repaint();
            myFrame.revalidate();

        } else {
            jLabelErr.setText("Erreur : Toutes les informations doivent être renseignées.");

        }

    }//GEN-LAST:event_jButtonSubmitActionPerformed

    public void initInformation(Person person) {
        jTextFieldFirstName.setText(person.getFirstName());
        jTextFieldLastName.setText(person.getLastName());
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        String strDate = dateFormat.format(person.getDateOfHire());
        jFormattedTextFieldHireDate.setText(strDate);
        
        DefaultListModel<Skill> modelSkill = (DefaultListModel<Skill>) jListSkill.getModel();
        HashMap<String, Skill> myskillList = person.getSkillList();
        
        if (!myskillList.isEmpty()) {
            for (Map.Entry<String, Skill> entrySet : myskillList.entrySet()) {
                String idSkill = entrySet.getKey();
                Skill skill = entrySet.getValue();
                modelSkill.addElement(skill);
            }
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonShiftLeftS;
    private javax.swing.JButton jButtonShiftRightS;
    private javax.swing.JButton jButtonSubmit;
    private javax.swing.JFormattedTextField jFormattedTextFieldHireDate;
    private javax.swing.JLabel jLabelErr;
    private javax.swing.JLabel jLabelFirstName;
    private javax.swing.JLabel jLabelHireDate;
    private javax.swing.JLabel jLabelLastName;
    private javax.swing.JLabel jLabelPerson;
    public javax.swing.JLabel jLabelReturn;
    public javax.swing.JLabel jLabelTitle;
    private javax.swing.JList<Skill> jListSkill;
    private javax.swing.JList<Skill> jListSkillAvailable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelHeader;
    private javax.swing.JPanel jPanelLeftDetail;
    private javax.swing.JPanel jPanelPerson;
    private javax.swing.JPanel jPanelRightDetail;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextFieldFirstName;
    private javax.swing.JTextField jTextFieldLastName;
    // End of variables declaration//GEN-END:variables
}
